## Pytorch常规模型训练流程
可将所有需要自定义的参数放在最前边，方便统一修改。

1. 数据预处理
    1. 加载数据（前置的数据最好为CSV格式）
    2. 数据增强（可选，根据数据集而定）
    3. 数据划分：训练集、验证集、测试集
    4. 特征工程：特征选择、特征缩放、特征归一化（必须进行归一化，否则模型将无法训练），将数据转化为Numpy数组（在此可将数据保存为.npy文件，便于下次使用）
    5. 加载数据(.npy文件)，并将数据转化为torch.Tensor格式,定义数据加载器进行数据加载
2. 模型搭建
    1. 选择模型架构（如ResNet、VGG、VIT等）
    2. 对模型进行微调，解冻部分层（可选）
    3. 对模型的分类头进行修改（如添加dropout层、修改输出层）
    4. 将模型移入GPU（可选）
3. 优化器选择
    1. 选择优化器（如Adam、AdamW、SGD等）和损失函数（如CrossEntropyLoss等）
    2. 设置学习率调度器、权重衰减、动量、学习率衰减策略（可选）
4. 训练
    1. 配置早停策略参数（可选）
    2. 训练模型，保存模型的最佳性能（使用训练集和验证集），保存训练日志（如loss、accuracy等）
    3. 循环训练时，调用早停策略
5. 评估
    1. 加载测试集数据(.npy文件)
    2. 加载最佳模型
    3. 进行模型评估，计算准确率和损失值
    4. 计算召回率、F1-score等指标（可选）
    5. 绘制ROC曲线、PR曲线（可选）